spring:
  datasource:
    url: ${HOTEL_DB_URL:jdbc:postgresql://localhost:9000/hotel}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:admin}
  flyway:
    schemas: public
    locations: classpath:db/migration
    enabled: true
  sleuth:
    sampler:
      percentage: 1.0
  zipkin:
    base-url: ${ZIPKIN_URL:http://localhost:9411}
    sender:
      type: web

springdoc:
  swagger-ui:
    path: /swagger-ui.html
eureka:
  client:
    healthcheck:
      enabled: true
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_HOST:http://localhost:8761/eureka/}
  instance:
    hostName: ${spring.application.name}

reservation:
  host: ${RESERVATION_SERVICE_HOST:http://localhost:9080}
  getReservation: /api/reservations

server:
  port: 9081

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
        ignoreExceptions:
          - com.incubator.dbs.hotelservice.exception.HotelServiceException
      shared:
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 30
        waitDurationInOpenState: 1s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        ignoreExceptions:
          - com.incubator.dbs.hotelservice.exception.HotelServiceException
    instances:
      hotels:
        baseConfig: default
      rooms:
        baseConfig: default
  retry:
    configs:
      default:
        maxRetryAttempts: 3
        waitDuration: 100
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
        ignoreExceptions:
          - com.incubator.dbs.hotelservice.exception.HotelServiceException
    instances:
      hotels:
        baseConfig: default
      rooms:
        baseConfig: default
  bulkhead:
    configs:
      default:
        maxConcurrentCalls: 100
        maxWaitDuration: 10ms
    instances:
      hotels:
        baseConfig: default
      rooms:
        baseConfig: default
  thread-pool-bulkhead:
    configs:
      default:
        maxThreadPoolSize: 4
        coreThreadPoolSize: 2
        queueCapacity: 2
    instances:
      hotels:
        baseConfig: default
      rooms:
        baseConfig: default
  ratelimiter:
    configs:
      default:
        registerHealthIndicator: false
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 0
        eventConsumerBufferSize: 100
    instances:
      hotels:
        baseConfig: default
      rooms:
        baseConfig: default